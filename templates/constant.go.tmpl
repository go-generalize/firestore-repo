// THIS FILE IS A GENERATED CODE. DO NOT EDIT
package {{ .PackageName }}

import (
    "log"
    "strconv"
)

type BoolCriteria string

const (
    BoolCriteriaEmpty BoolCriteria = ""
    BoolCriteriaTrue  BoolCriteria = "true"
    BoolCriteriaFalse BoolCriteria = "false"
)

func (src BoolCriteria) Bool() bool {
    return src == BoolCriteriaTrue
}

type NumericCriteria string

const (
    NumericCriteriaEmpty NumericCriteria = ""
    NumericCriteriaBase  NumericCriteria = "0"
)

func (str NumericCriteria) Parse(i interface{}) NumericCriteria {
    switch x := i.(type) {
    case int:
        return NumericCriteria(strconv.Itoa(x))
    case int64:
        return NumericCriteria(strconv.FormatInt(x, 10))
    case float64:
        return NumericCriteria(strconv.FormatFloat(x, 'f', -1, 64))
    default:
        log.Println("invalid NumericCriteria value")
    }
    return NumericCriteriaEmpty
}

func (str NumericCriteria) Int() int {
    i32, err := strconv.Atoi(string(str))
    if err != nil {
        return -1
    }
    return i32
}

func (str NumericCriteria) Int64() int64 {
    i64, err := strconv.ParseInt(string(str), 10, 64)
    if err != nil {
        return -1
    }
    return i64
}

func (str NumericCriteria) Float64() float64 {
    f64, err := strconv.ParseFloat(string(str), 64)
    if err != nil {
        return -1
    }
    return f64
}
